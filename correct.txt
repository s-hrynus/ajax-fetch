// words.json ///////////////////////////////////////////////////////////////


[
  {
      "spelling" : "airplane",
      "pronunciation" : "['…úr,ple…™n]",
      "definition": "an aircraft that has a fixed wing and is powered by propellers or jets"
  },
  {
      "spelling" : "zoo",
      "pronunciation" : "[zuu]",
      "definition": "place with animals"
  }
]  



  // .replit /////////////////////////////////////////////////////////
  
  language = "html"
run = "index.html"


// JS //////////////////////////////////////////////////////////////

const word = document.getElementById('word');
const text = document.getElementById('text');
const scoreEl = document.getElementById('score');
const timeEl = document.getElementById('time');
const endgameEl = document.getElementById('end-game-container');
const settingsBtn = document.getElementById('settings-btn');
const settings = document.getElementById('settings');
const settingsForm = document.getElementById('settings-form');
const difficultySelect = document.getElementById('difficulty');


// Init word
let randomWord;

// Init score
let score = 0;

// Init time
let time = 10;

// Set difficulty to value in ls or medium
let difficulty =
  localStorage.getItem('difficulty') !== null
    ? localStorage.getItem('difficulty')
    : 'medium';

// Set difficulty select value
difficultySelect.value =
  localStorage.getItem('difficulty') !== null
    ? localStorage.getItem('difficulty')
    : 'medium';

// Focus on text on start
text.focus();

// Start counting down
const timeInterval = setInterval(updateTime, 1000);

function getRandomArbitrary(min, max) {
    return Math.random() * (max - min) + min;
}

// Generate random word from array
function getRandomWord(words) {
  const idx = Math.round(getRandomArbitrary(0, words.length - 1));
  return words[idx];
}

// Add word to DOM
async function addWordToDOM() {
  const response = await fetch('words.json');
  const words = await response.json();
  const randomWord = getRandomWord(words);
  word.innerHTML = randomWord.spelling;
  document.querySelector('.definition').innerText =           randomWord.definition; 
  document.querySelector('.pronunciation').innerText = 
    randomWord.pronunciation;
}

// Update score
function updateScore() {
  score++;
  scoreEl.innerHTML = score;
}

// Update time
function updateTime() {
  time--;
  timeEl.innerHTML = time + 's';

  if (time === 0) {
    clearInterval(timeInterval);
    // end game
    gameOver();
  }
}

// Game over, show end screen
function gameOver() {
  endgameEl.innerHTML = `
    <h1>Time ran out</h1>
    <p>Your final score is ${score}</p>
    <button onclick="location.reload()">Reload</button>
  `;

  endgameEl.style.display = 'flex';
}

addWordToDOM();

// Event listeners

// Typing
text.addEventListener('input', e => {
  const insertedText = e.target.value;

  if (insertedText === randomWord) {
    addWordToDOM();
    updateScore();

    // Clear
    e.target.value = '';

    if (difficulty === 'hard') {
      time += 2;
    } else if (difficulty === 'medium') {
      time += 3;
    } else {
      time += 5;
    }

    updateTime();
  }
});

// Settings btn click
settingsBtn.addEventListener('click', () => settings.classList.toggle('hide'));

// Settings select
settingsForm.addEventListener('change', e => {
  difficulty = e.target.value;
  localStorage.setItem('difficulty', difficulty);
});


// document.querySelector('.fetch-json').addEventListener('click', aboutIt);

// async function aboutIt() {
    
// }

// {
//  "pronunciation_b" : "[zu]",
//  "definition_b": "the facility where wild animals are housed for exhibition"
// }

// style.css /////////////////////////////////////////////////////////////////////////////////

* {
  box-sizing: border-box;
}

body {
  background-color: #2c3e50;
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  margin: 0;
  font-family: Verdana, Geneva, Tahoma, sans-serif;
}

button {
  cursor: pointer;
  font-size: 14px;
  border-radius: 4px;
  padding: 5px 15px;
}

select {
  width: 200px;
  padding: 5px;
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  border-radius: 0;
  background-color: #a7c5e3;
}

select:focus,
button:focus {
  outline: 0;
}

.settings-btn {
  position: absolute;
  bottom: 30px;
  left: 30px;
}

.settings {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  background-color: rgba(0, 0, 0, 0.3);
  height: 70px;
  color: #fff;
  display: flex;
  align-items: center;
  justify-content: center;
  transform: translateY(0);
  transition: transform 0.3s ease-in-out;
}

.settings.hide {
  transform: translateY(-100%);
}

.container {
  background-color: #34495e;
  padding: 20px;
  border-radius: 4px;
  box-shadow: 0 3px 5px rgba(0, 0, 0, 0.3);
  color: #fff;
  position: relative;
  text-align: center;
  width: 500px;
}

h2 {
  background-color: rgba(0, 0, 0, 0.3);
  padding: 8px;
  border-radius: 4px;
  margin: 0 0 40px;
}

h1 {
  margin: 0;
}

input {
  border: 0;
  border-radius: 4px;
  font-size: 14px;
  width: 300px;
  padding: 12px 20px;
  margin-top: 10px;
}

.score-container {
  position: absolute;
  top: 60px;
  right: 20px;
}

.time-container {
  position: absolute;
  top: 60px;
  left: 20px;
}

.end-game-container {
  background-color: inherit;
  display: none;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
}

/// index.html     ///////////////////////////////////////////////////////////////////////////////////////



<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="UTF-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<meta http-equiv="X-UA-Compatible" content="ie=edge" />
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.11.2/css/all.min.css"
		integrity="sha256-+N4/V/SbAFiW1MPBCXnfnP9QSN3+Keu+NlB+0ev/YKQ=" crossorigin="anonymous" />
	<link rel="stylesheet" href="css/style.css" />
	<title>Speed Typer</title>
</head>

<body>
	<button id="settings-btn" class="settings-btn">
      <i class="fas fa-cog"></i>
    </button>

	<div id="settings" class="settings">
		<form id="settings-form">
			<div>
				<label for="difficulty">Difficulty</label>
				<select id="difficulty">
            <option value="easy">Easy</option>
            <option value="medium">Medium</option>
            <option value="hard">Hard</option>
          </select>
			</div>
		</form>
	</div>

	<div class="container">
		<h2>üë©‚Äçüíª Speed Typer üë®‚Äçüíª</h2>
		<small>Type the following:</small>

		<h1 id="word"></h1>

		<input
        type="text"
        id="text"
        autocomplete="off"
        placeholder="Type the word here..."
        autofocus
      />
        <p><strong>Pronunciation : </strong><span class="pronunciation"></span></p>
		<p><strong>Definition : </strong><span class="definition"></span></p>
		<button class="fetch-json">About it</button>

		<p class="time-container">Time left: <span id="time">10s</span></p>
		<p class="score-container">Score: <span id="score">0</span></p>

		<div id="end-game-container" class="end-game-container"></div>
	</div>

	<script src="js/script.js"></script>
</body>

</html>




